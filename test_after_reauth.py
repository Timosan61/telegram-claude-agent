#!/usr/bin/env python3
"""
‚úÖ –¢–µ—Å—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram –∞–≥–µ–Ω—Ç–∞

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
–∏ –∞–≥–µ–Ω—Ç –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram.
"""
import asyncio
import os
import sys
from datetime import datetime
from dotenv import load_dotenv

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
load_dotenv()

from telethon import TelegramClient, events
from telethon.tl.types import PeerChannel, PeerChat, PeerUser

async def test_reauth_success():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("‚úÖ –¢–ï–°–¢ –ü–û–°–õ–ï –ü–ï–†–ï–ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("=" * 40)
    
    api_id = int(os.getenv("TELEGRAM_API_ID"))
    api_hash = os.getenv("TELEGRAM_API_HASH")
    
    client = TelegramClient("telegram_agent", api_id, api_hash)
    
    try:
        await client.connect()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if not await client.is_user_authorized():
            print("‚ùå –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
            print("üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: python reauth_telegram.py")
            return False
        
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} (ID: {me.id})")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏–∞–ª–æ–≥–∞–º
        print(f"\\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã:")
        
        dialogs_count = 0
        target_channels = []
        
        async for dialog in client.iter_dialogs(limit=20):
            dialogs_count += 1
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø
            if dialog.is_channel:
                if dialog.entity.megagroup:
                    chat_type = "üë•"
                else:
                    chat_type = "üì∫"
            elif dialog.is_group:
                chat_type = "üë•"
            else:
                chat_type = "üë§"
            
            print(f"  {dialogs_count:2d}. {chat_type} {dialog.name}")
            
            # –ò—â–µ–º —Ü–µ–ª–µ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
            name_lower = dialog.name.lower()
            if any(target in name_lower for target in ['eslitotoeto', '–µ—Å–ª–∏ —ç—Ç–æ']):
                target_channels.append({
                    'name': dialog.name,
                    'id': dialog.id,
                    'type': chat_type
                })
        
        print(f"\\nüìä –ù–∞–π–¥–µ–Ω–æ {dialogs_count} –¥–∏–∞–ª–æ–≥–æ–≤")
        
        if target_channels:
            print(f"\\nüéØ –¶–ï–õ–ï–í–´–ï –ö–ê–ù–ê–õ–´ –ù–ê–ô–î–ï–ù–´:")
            for channel in target_channels:
                print(f"   {channel['type']} {channel['name']} (ID: {channel['id']})")
        else:
            print(f"\\n‚ö†Ô∏è  –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª @eslitotoeto –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print(f"   –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É")
        
        # –ö—Ä–∞—Ç–∫–∏–π —Ç–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        print(f"\\nüîç –¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (5 —Å–µ–∫—É–Ω–¥)...")
        print("üí° –ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ –ª—é–±–æ–º —á–∞—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
        messages_received = 0
        
        @client.on(events.NewMessage())
        async def handler(event):
            nonlocal messages_received
            messages_received += 1
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            try:
                chat_entity = await client.get_entity(event.message.peer_id)
                chat_name = getattr(chat_entity, 'title', 
                                 getattr(chat_entity, 'username', 
                                        getattr(chat_entity, 'first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')))
            except:
                chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            text = event.message.text[:40] + "..." if event.message.text and len(event.message.text) > 40 else event.message.text or "[–ú–µ–¥–∏–∞]"
            now = datetime.now().strftime("%H:%M:%S")
            
            print(f"üì® [{now}] {chat_name}: {text}")
        
        # –ñ–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        await asyncio.sleep(5)
        
        print(f"\\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
        print(f"   –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_received}")
        
        if messages_received > 0:
            print("   üéâ –ê–ì–ï–ù–¢ –í–ò–î–ò–¢ –°–û–û–ë–©–ï–ù–ò–Ø!")
            print("   ‚úÖ –ü–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        else:
            print("   ‚ö†Ô∏è  –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ")
            print("   üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç–∞—Ö")
            print("   ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –∞–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        await client.disconnect()

async def main():
    success = await test_reauth_success()
    
    print("\\n" + "=" * 40)
    if success:
        print("üéâ –ü–ï–†–ï–ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê!")
        print("üîß Backend –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram –∞–≥–µ–Ω—Ç")
        print("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API: /health –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å telegram_connected: true")
    else:
        print("‚ùå –ü–ï–†–ï–ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –¢–†–ï–ë–£–ï–¢–°–Ø")
        print("üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: python reauth_telegram.py")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\\nüõë –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
    except Exception as e:
        print(f"\\n‚ùå –û—à–∏–±–∫–∞: {e}")