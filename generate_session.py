#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ TELEGRAM_SESSION_STRING –¥–ª—è production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å–µ—Å—Å–∏–∏
"""

import asyncio
import os
import base64
from dotenv import load_dotenv

try:
    from telethon import TelegramClient
except ImportError:
    print("‚ùå –û—à–∏–±–∫–∞: telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install telethon")
    exit(1)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
API_ID = os.getenv('TELEGRAM_API_ID')
API_HASH = os.getenv('TELEGRAM_API_HASH') 
PHONE = os.getenv('TELEGRAM_PHONE')

# –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not API_ID:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

if not API_HASH:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_HASH –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

if not PHONE:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_PHONE –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

try:
    API_ID = int(API_ID)
except ValueError:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
    exit(1)

async def generate_session():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫–∏ —Å–µ—Å—Å–∏–∏ Telegram"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏ Telegram...")
    print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {PHONE}")
    print(f"üîë API ID: {API_ID}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    client = TelegramClient('temp_session', API_ID, API_HASH)
    
    try:
        print("\nüìû –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        
        # –ù–∞—á–∞–ª–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        await client.start(phone=PHONE)
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å–µ—Å—Å–∏–∏
        session_string = client.session.save()
        
        # –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ base64 –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        session_b64 = base64.b64encode(session_string).decode()
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\nüéâ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
        print("="*60)
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –≤–∞—à –¥–µ–ø–ª–æ–π:")
        print("="*60)
        print()
        print(f"TELEGRAM_SESSION_STRING={session_string}")
        print()
        print(f"TELEGRAM_SESSION_B64={session_b64}")
        print()
        print("="*60)
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TELEGRAM_SESSION_STRING –¥–ª—è Heroku/Railway")
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TELEGRAM_SESSION_B64 –¥–ª—è DigitalOcean –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã")
        print("="*60)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
        with open('.session_backup.txt', 'w') as f:
            f.write(f"TELEGRAM_SESSION_STRING={session_string}\n")
            f.write(f"TELEGRAM_SESSION_B64={session_b64}\n")
        
        print("üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ .session_backup.txt")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        me = await client.get_me()
        print(f"üë§ –ê–∫–∫–∞—É–Ω—Ç: {me.first_name} {me.last_name or ''}")
        print(f"üì± Username: @{me.username or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"üÜî ID: {me.id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API_ID –∏ API_HASH")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –Ω–∞ https://my.telegram.org/apps")
        
    finally:
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Telegram
        await client.disconnect()
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏
        try:
            os.remove('temp_session.session')
        except:
            pass
        
        print("\nüîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ Telegram Claude Agent - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –°–µ—Å—Å–∏–∏")
    print("="*50)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if os.path.exists('.env'):
        print("‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    # –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    try:
        asyncio.run(generate_session())
    except KeyboardInterrupt:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()