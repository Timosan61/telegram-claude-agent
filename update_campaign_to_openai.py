#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è OpenAI
"""
import requests
import json

def update_campaign_to_openai(campaign_id=1):
    """–û–±–Ω–æ–≤–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è OpenAI"""
    
    # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
    try:
        response = requests.get(f"https://answerbot-magph.ondigitalocean.app/campaigns/{campaign_id}")
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏: {response.status_code}")
            return False
            
        campaign_data = response.json()
        print(f"üìã –¢–µ–∫—É—â–∞—è –∫–∞–º–ø–∞–Ω–∏—è: {campaign_data['name']}")
        print(f"ü§ñ –¢–µ–∫—É—â–∏–π AI provider: {campaign_data.get('ai_provider', 'unknown')}")
        
        # –û–±–Ω–æ–≤–∏—Ç—å AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–∞ OpenAI
        campaign_data['ai_provider'] = 'openai'
        campaign_data['openai_model'] = 'gpt-4o'
        
        print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ OpenAI...")
        
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        update_response = requests.put(
            f"https://answerbot-magph.ondigitalocean.app/campaigns/{campaign_id}",
            json=campaign_data,
            timeout=30
        )
        
        if update_response.status_code == 200:
            updated_data = update_response.json()
            print(f"‚úÖ –ö–∞–º–ø–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            print(f"ü§ñ –ù–æ–≤—ã–π AI provider: {updated_data.get('ai_provider')}")
            print(f"üß† –ú–æ–¥–µ–ª—å: {updated_data.get('openai_model')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_response.status_code}")
            print(f"üìã –û—Ç–≤–µ—Ç: {update_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def restart_agent():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞"""
    try:
        print("\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
        response = requests.post("https://answerbot-magph.ondigitalocean.app/telegram/restart", timeout=30)
        
        if response.status_code == 200:
            print("‚úÖ –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def check_openai_status():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å OpenAI"""
    try:
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ OpenAI...")
        
        import time
        time.sleep(3)  # –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        
        response = requests.get("https://answerbot-magph.ondigitalocean.app/telegram/status", timeout=10)
        if response.status_code == 200:
            status = response.json()
            details = status.get('details', {})
            ai_clients = details.get('ai_clients', {})
            
            print(f"ü§ñ OpenAI –¥–æ—Å—Ç—É–ø–µ–Ω: {ai_clients.get('openai', False)}")
            print(f"ü§ñ OpenAI —Ä–∞–±–æ—Ç–∞–µ—Ç: {ai_clients.get('openai_working', False)}")
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {details.get('active_campaigns', 0)}")
            
            if ai_clients.get('openai_working'):
                print("\nüéâ OPENAI –ê–ö–¢–ò–í–ï–ù! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–∞–º!")
                return True
            else:
                print("\n‚ö†Ô∏è OpenAI –ø–æ–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("   1. –ù–µ—Ç OPENAI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
                print("   2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –∫–ª—é—á")
                print("   3. –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ö–ê–ú–ü–ê–ù–ò–ò –ù–ê OPENAI")
    print("=" * 40)
    
    # –û–±–Ω–æ–≤–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
    if update_campaign_to_openai():
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
        if restart_agent():
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å OpenAI
            openai_working = check_openai_status()
            
            if openai_working:
                print("\nüöÄ –ì–û–¢–û–í–û –ö –†–ê–ë–û–¢–ï!")
                print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:")
                print("   '—Ç–µ—Å—Ç –±–æ—Ç' –∏–ª–∏ '–ø–æ–º–æ—â—å' –≤ –∫–∞–Ω–∞–ª–µ @eslitotoeto")
                print("üß† –û—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è GPT-4o!")
            else:
                print("\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ OPENAI_API_KEY")
                print("üí° –ë–æ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å fallback –æ—Ç–≤–µ—Ç—ã")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏")

if __name__ == "__main__":
    main()