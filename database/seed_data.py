"""
Seed –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

from sqlalchemy.orm import Session
from database.models.base import SessionLocal, create_tables
from database.models.campaign import Campaign
from database.models.company import CompanySettings
import json


def create_demo_company():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–µ–º–æ –∫–æ–º–ø–∞–Ω–∏—è
        existing_company = db.query(CompanySettings).filter(
            CompanySettings.name == "–¢–ò–ú"
        ).first()
        
        if existing_company:
            print("‚úÖ –î–µ–º–æ –∫–æ–º–ø–∞–Ω–∏—è '–¢–ò–ú' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return existing_company
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –∫–æ–º–ø–∞–Ω–∏—é
        demo_company = CompanySettings(
            name="–¢–ò–ú",
            telegram_accounts=["+1234567890"],
            ai_providers={
                "claude": {
                    "enabled": True,
                    "model": "claude-3-sonnet-20240229",
                    "max_tokens": 1000
                },
                "openai": {
                    "enabled": True,
                    "model": "gpt-4",
                    "max_tokens": 1000
                }
            },
            default_settings={
                "context_messages_count": 5,
                "ai_provider": "claude",
                "auto_reply": True,
                "language": "ru"
            }
        )
        
        db.add(demo_company)
        db.commit()
        db.refresh(demo_company)
        
        print("‚úÖ –î–µ–º–æ –∫–æ–º–ø–∞–Ω–∏—è '–¢–ò–ú' —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return demo_company
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ –∫–æ–º–ø–∞–Ω–∏–∏: {e}")
        return None
    finally:
        db.close()


def create_demo_campaigns():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π"""
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—è
        existing_campaign = db.query(Campaign).filter(
            Campaign.name == "–î–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—è - –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
        ).first()
        
        if existing_campaign:
            print("‚úÖ –î–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return existing_campaign
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—é
        demo_campaign = Campaign(
            name="–î–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—è - –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
            active=True,
            telegram_chats=["@demo_channel", "2532661483"],  # –í–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≥—Ä—É–ø–ø—É
            keywords=["–ø–æ–º–æ—â—å", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–≤–æ–ø—Ä–æ—Å", "–ø—Ä–æ–±–ª–µ–º–∞", "help"],
            telegram_account="+1234567890",
            ai_provider="claude",
            system_instruction="""–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –¢–ò–ú.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
- –û—Ç–≤–µ—á–∞—Ç—å –≤–µ–∂–ª–∏–≤–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –ü–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Ö –≤–æ–ø—Ä–æ—Å–∞–º–∏
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö
- –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º

–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–ø–ª–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
- –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É
- –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–π –¥–∞–ª—å–Ω–µ–π—à—É—é –ø–æ–º–æ—â—å""",
            context_messages_count=3,
            example_replies=[
                "–ü—Ä–∏–≤–µ—Ç! üëã –ö–∞–∫ –¥–µ–ª–∞? –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                "–ö–æ–Ω–µ—á–Ω–æ, –ø–æ–º–æ–≥—É! üòä –†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–≤–æ–µ–º –≤–æ–ø—Ä–æ—Å–µ.",
                "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! ü§î –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –≤–º–µ—Å—Ç–µ.",
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! üôè –Ø –ø–µ—Ä–µ–¥–∞–º —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.",
                "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üí™ –ï—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã?"
            ]
        )
        
        db.add(demo_campaign)
        db.commit()
        db.refresh(demo_campaign)
        
        print("‚úÖ –î–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return demo_campaign
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ –∫–∞–º–ø–∞–Ω–∏–∏: {e}")
        return None
    finally:
        db.close()


def initialize_demo_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üå± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
    try:
        create_tables()
    except Exception as e:
        print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {e}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –∫–æ–º–ø–∞–Ω–∏—é
    company = create_demo_company()
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –∫–∞–º–ø–∞–Ω–∏—é
    campaign = create_demo_campaigns()
    
    if company and campaign:
        print("‚úÖ –í—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ –≤—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
        return False


if __name__ == "__main__":
    initialize_demo_data()