from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
import os
from dotenv import load_dotenv

load_dotenv()

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - Supabase PostgreSQL –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π SQLite –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
def get_database_url():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä—è–º–æ–π DATABASE_URL
    direct_db_url = os.getenv("DATABASE_URL")
    if direct_db_url:
        print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π DATABASE_URL")
        return direct_db_url
    
    # Fallback –∫ SQLite –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    print("üîÑ Fallback –∫ SQLite –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    return "sqlite:///./campaigns.db"

DATABASE_URL = get_database_url()

# –°–æ–∑–¥–∞–µ–º engine —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
if "postgresql" in DATABASE_URL:
    # PostgreSQL/Supabase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    engine = create_engine(
        DATABASE_URL,
        pool_pre_ping=True,
        pool_recycle=300,
        echo=False
    )
else:
    # SQLite –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    engine = create_engine(
        DATABASE_URL,
        connect_args={"check_same_thread": False},
        echo=False
    )

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()


def get_db():
    """Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()


def create_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    Base.metadata.create_all(bind=engine)