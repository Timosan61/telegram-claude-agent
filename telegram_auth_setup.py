#!/usr/bin/env python3
"""
üîê –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Telegram –∞–≥–µ–Ω—Ç–∞

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ
–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏.

–í–ê–ñ–ù–û: –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ Telegram!
"""
import asyncio
import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

try:
    from telethon import TelegramClient
    from telethon.errors import PhoneCodeInvalidError, PhoneNumberInvalidError
except ImportError:
    print("‚ùå –û—à–∏–±–∫–∞: telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("pip install telethon cryptg python-dotenv")
    sys.exit(1)

class TelegramAuthenticator:
    def __init__(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ .env
        self.api_id = os.getenv("TELEGRAM_API_ID")
        self.api_hash = os.getenv("TELEGRAM_API_HASH")
        self.phone = os.getenv("TELEGRAM_PHONE")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if not all([self.api_id, self.api_hash, self.phone]):
            print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env –∏ —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã:")
            print("- TELEGRAM_API_ID")
            print("- TELEGRAM_API_HASH") 
            print("- TELEGRAM_PHONE")
            sys.exit(1)
        
        self.api_id = int(self.api_id)
        print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
        print(f"   üì± –¢–µ–ª–µ—Ñ–æ–Ω: {self.phone}")
        print(f"   üîë API ID: {self.api_id}")
        print()
    
    async def authenticate(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        print("üîê –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é Telegram –∞–≥–µ–Ω—Ç–∞")
        print("=" * 50)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
        client = TelegramClient("telegram_agent", self.api_id, self.api_hash)
        
        try:
            print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
            await client.connect()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            if await client.is_user_authorized():
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
                await self.show_user_info(client)
                return True
            
            print("üìû –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            print(f"üì± –ö–æ–¥ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –Ω–æ–º–µ—Ä: {self.phone}")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞
            await client.send_code_request(self.phone)
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            while True:
                try:
                    code = input("üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram (5 —Ü–∏—Ñ—Ä): ").strip()
                    
                    if not code or len(code) != 5 or not code.isdigit():
                        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ 5 —Ü–∏—Ñ—Ä.")
                        continue
                    
                    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –∫–æ–¥–æ–º...")
                    await client.sign_in(self.phone, code)
                    break
                    
                except PhoneCodeInvalidError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
                    continue
                except Exception as e:
                    if "password" in str(e).lower():
                        # –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                        password = input("üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ")
                        await client.sign_in(password=password)
                        break
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
                        return False
            
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            await self.show_user_info(client)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç–∞–º
            await self.test_chat_access(client)
            
            return True
            
        except PhoneNumberInvalidError:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {self.phone}")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –≤ —Ñ–∞–π–ª–µ .env")
            return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            return False
            
        finally:
            await client.disconnect()
    
    async def show_user_info(self, client):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        try:
            me = await client.get_me()
            print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} {me.last_name or ''}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone}")
            print(f"üÜî ID: {me.id}")
            if me.username:
                print(f"üìß Username: @{me.username}")
            print()
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
    
    async def test_chat_access(self, client):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç–∞–º"""
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç–∞–º...")
        
        try:
            count = 0
            async for dialog in client.iter_dialogs(limit=10):
                count += 1
                
                # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —á–∞—Ç–∞
                if dialog.is_channel:
                    if dialog.entity.megagroup:
                        chat_type = "üë• –°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞"
                    else:
                        chat_type = "üì∫ –ö–∞–Ω–∞–ª"
                elif dialog.is_group:
                    chat_type = "üë• –ì—Ä—É–ø–ø–∞"
                else:
                    chat_type = "üë§ –õ–∏—á–Ω—ã–π"
                
                print(f"  {count:2d}. {chat_type}: {dialog.name}")
                print(f"      ID: {dialog.id}, –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–æ: {dialog.unread_count}")
            
            print(f"\\nüìä –î–æ—Å—Ç—É–ø–Ω–æ {count} –¥–∏–∞–ª–æ–≥–æ–≤")
            
            if count > 0:
                print("‚úÖ –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç–∞–º —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print("üéØ –ê–≥–µ–Ω—Ç —Å–º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–∏—Ö —á–∞—Ç–∞—Ö")
            else:
                print("‚ö†Ô∏è –ß–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Ç–æ–≤: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ Telegram Claude Agent - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Telegram —á–∞—Ç–æ–≤")
    print()
    
    authenticator = TelegramAuthenticator()
    success = await authenticator.authenticate()
    
    print("=" * 50)
    if success:
        print("üéâ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print()
        print("üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: telegram_agent.session")
        print("üîß –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å backend —Å Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π")
        print("üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑: curl localhost:8000/health")
        print()
        print("‚ö†Ô∏è –í–ê–ñ–ù–û:")
        print("- –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å —Ñ–∞–π–ª–æ–º .session - –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("- –î–æ–±–∞–≤—å—Ç–µ *.session –≤ .gitignore")
        print("- –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —Ö—Ä–∞–Ω–∏—Ç–µ —Å–µ—Å—Å–∏–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ")
    else:
        print("‚ùå –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï –£–î–ê–õ–ê–°–¨")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\\nüõë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()