# Makefile –¥–ª—è Telegram Claude Agent

.PHONY: help install run test clean setup check

help:  ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2}'

install:  ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	pip install -r requirements.txt

setup:  ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (—Å–æ–∑–¥–∞—Ç—å .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞)
	@if [ ! -f .env ]; then \
		cp .env.example .env; \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"; \
		echo "‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏"; \
	else \
		echo "‚ÑπÔ∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi

check:  ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
	@python -c "from dotenv import load_dotenv; import os; load_dotenv(); print('‚úÖ ANTHROPIC_API_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω' if os.getenv('ANTHROPIC_API_KEY') else '‚ùå ANTHROPIC_API_KEY –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
	@python -c "from dotenv import load_dotenv; import os; load_dotenv(); print('‚úÖ TELEGRAM_API_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω' if os.getenv('TELEGRAM_API_ID') else '‚ùå TELEGRAM_API_ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
	@python -c "from dotenv import load_dotenv; import os; load_dotenv(); print('‚úÖ TELEGRAM_API_HASH –Ω–∞—Å—Ç—Ä–æ–µ–Ω' if os.getenv('TELEGRAM_API_HASH') else '‚ùå TELEGRAM_API_HASH –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"

run:  ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
	python run.py

run-backend:  ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ backend
	python -m uvicorn backend.main:app --reload --host 127.0.0.1 --port 8000

run-frontend:  ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ frontend
	streamlit run frontend/app.py --server.port 8501

test:  ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	@echo "‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:8000"
	python tests/test_api.py

lint:  ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	flake8 --max-line-length=120 --ignore=E203,W503 backend/ utils/
	
format:  ## –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	black --line-length=120 backend/ utils/ tests/

clean:  ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -name "*.log" -delete
	rm -f *.session
	rm -f *.session-journal
	rm -f campaigns.db
	rm -f local_memory.json

init-db:  ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	@echo "üóÑÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@python -c "from database.models.base import create_tables; create_tables(); print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')"

dev-setup: install setup init-db  ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
	@echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
	@echo "  1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏"
	@echo "  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make run"

prod-setup: install init-db  ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "üè≠ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞!"

docker-build:  ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	@echo "‚ö†Ô∏è  Docker –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö"

backup-db:  ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@if [ -f campaigns.db ]; then \
		cp campaigns.db campaigns_backup_$(shell date +%Y%m%d_%H%M%S).db; \
		echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"; \
	else \
		echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; \
	fi

stats:  ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
	@echo "–°—Ç—Ä–æ–∫ –∫–æ–¥–∞ Python:"
	@find . -name "*.py" -not -path "./venv/*" -not -path "./.env/*" | xargs wc -l | tail -1
	@echo "–§–∞–π–ª–æ–≤ Python:"
	@find . -name "*.py" -not -path "./venv/*" -not -path "./.env/*" | wc -l
	@echo "–†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞:"
	@du -sh . --exclude=venv --exclude=.git

logs:  ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã
	@if [ -f logs/app.log ]; then \
		tail -f logs/app.log; \
	else \
		echo "üì≠ –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
	fi