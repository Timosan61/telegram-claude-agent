#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""
import asyncio
import requests
import json

def check_recent_activity():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ª–æ–≥–∞—Ö"""
    try:
        print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤...")
        response = requests.get("https://answerbot-magph.ondigitalocean.app/logs", timeout=10)
        if response.status_code == 200:
            logs = response.json()
            print(f"üìù –í—Å–µ–≥–æ –ª–æ–≥–æ–≤: {len(logs)}")
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ª–æ–≥–æ–≤
            recent_logs = logs[-10:] if logs else []
            for log in recent_logs:
                print(f"   {log.get('timestamp', 'Unknown')}: {log.get('original_message', 'No message')[:50]} -> {log.get('status', 'Unknown')}")
            
            return len(logs)
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏: {response.status_code}")
            return 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")
        return 0

def get_campaign_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö"""
    try:
        print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö...")
        response = requests.get("https://answerbot-magph.ondigitalocean.app/campaigns", timeout=10)
        if response.status_code == 200:
            campaigns = response.json()
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {len(campaigns)}")
            
            for i, campaign in enumerate(campaigns, 1):
                print(f"\nüéØ –ö–∞–º–ø–∞–Ω–∏—è {i}:")
                print(f"   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {campaign.get('name', 'Unknown')}")
                print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞: {campaign.get('active', False)}")
                print(f"   üí¨ –ß–∞—Ç—ã: {campaign.get('telegram_chats', [])}")
                print(f"   üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {campaign.get('keywords', [])}")
                
                # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã –æ–±—Å—É–∂–¥–µ–Ω–∏–π
                chats = campaign.get('telegram_chats', [])
                if '2532661483' in [str(chat) for chat in chats]:
                    print(f"   ‚úÖ –ì—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω–∞!")
                else:
                    print(f"   ‚ùå –ì—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π –ù–ï –≤–∫–ª—é—á–µ–Ω–∞!")
                    
            return campaigns
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏–∏: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–π: {e}")
        return []

def check_agent_status():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞"""
    try:
        print("\nü§ñ –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞...")
        response = requests.get("https://answerbot-magph.ondigitalocean.app/telegram/status", timeout=10)
        if response.status_code == 200:
            status = response.json()
            details = status.get('details', {})
            
            print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω: {details.get('connected', False)}")
            print(f"üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {details.get('authorized', False)}")
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {details.get('active_campaigns', 0)}")
            print(f"üí° OpenAI: {details.get('ai_clients', {}).get('openai', False)}")
            
            return details.get('connected', False) and details.get('authorized', False)
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False

def test_manual_message():
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π —á–µ—Ä–µ–∑ API"""
    print("\nüß™ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
    test_campaign = {
        "name": "Manual Test Campaign",
        "active": True,
        "telegram_chats": ["2532661483"],  # –ì—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π
        "keywords": ["–º–∞–Ω—É–∞–ª—å–Ω—ã–π—Ç–µ—Å—Ç"],  # –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ
        "telegram_account": "+79885517453",
        "ai_provider": "openai",
        "system_instruction": "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç: –Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!"
    }
    
    try:
        # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é
        response = requests.post(
            "https://answerbot-magph.ondigitalocean.app/campaigns",
            json=test_campaign,
            timeout=15
        )
        
        if response.status_code in [200, 201]:
            result = response.json()
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—é —Å–æ–∑–¥–∞–Ω–∞: ID {result.get('id')}")
            
            # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
            restart_response = requests.post(
                "https://answerbot-magph.ondigitalocean.app/telegram/restart",
                timeout=30
            )
            
            if restart_response.status_code == 200:
                print("‚úÖ –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏")
                print("\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ê:")
                print("1. –ó–∞–π–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É '–ï—Å–ª–∏ —ç—Ç–æ, —Ç–æ —Å–¥–µ–ª–∞–π —Ç–æ Chat'")
                print("2. –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –º–∞–Ω—É–∞–ª—å–Ω—ã–π—Ç–µ—Å—Ç")
                print("3. –ï—Å–ª–∏ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å")
                print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞: {restart_response.status_code}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

def wait_and_check_results():
    """–ü–æ–¥–æ–∂–¥–∞—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"""
    print("\n‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ (15 —Å–µ–∫—É–Ω–¥)...")
    import time
    time.sleep(15)
    
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
    logs_before = check_recent_activity()
    
    if logs_before > 0:
        print("‚úÖ –ï—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ª–æ–≥–∞—Ö!")
    else:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
    if not check_agent_status():
        print("‚ùå –ê–≥–µ–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏–∏
    campaigns = get_campaign_info()
    if not campaigns:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏
    logs_count = check_recent_activity()
    
    # –°–¥–µ–ª–∞—Ç—å —Ä—É—á–Ω–æ–π —Ç–µ—Å—Ç
    if test_manual_message():
        wait_and_check_results()
    
    print("\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("–ï—Å–ª–∏ –≤—ã –≤–∏–¥–µ–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ 'bot activation monitor', –Ω–æ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ '—Ç–µ—Å—Ç',")
    print("–≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("1. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞ (–Ω–µ –≥—Ä—É–ø–ø—ã –æ–±—Å—É–∂–¥–µ–Ω–∏–π)")
    print("2. –°–æ–±—ã—Ç–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç")
    print("3. –ù—É–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")

if __name__ == "__main__":
    main()