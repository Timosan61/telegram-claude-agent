#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π
"""
import asyncio
import os
import sys
sys.path.append('.')

from backend.core.telegram_agent_app_platform import get_telegram_agent

async def send_direct_test():
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ –≥—Ä—É–ø–ø—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π"""
    print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∞–≥–µ–Ω—Ç—É...")
    
    try:
        agent = await get_telegram_agent()
        
        if not agent or not agent.is_authorized:
            print("‚ùå –ê–≥–µ–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            return False
        
        print("‚úÖ –ê–≥–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # ID –≥—Ä—É–ø–ø—ã –æ–±—Å—É–∂–¥–µ–Ω–∏–π
        discussion_group_id = 2532661483
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
        try:
            discussion_entity = await agent.client.get_entity(discussion_group_id)
            print(f"üìã –ì—Ä—É–ø–ø–∞: {getattr(discussion_entity, 'title', 'Unknown')}")
            print(f"üîí –¢–∏–ø: {type(discussion_entity)}")
            
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = "ü§ñ –ü–†–Ø–ú–û–ô –¢–ï–°–¢: –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"
            
            print(f"üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            
            result = await agent.client.send_message(
                entity=discussion_entity,
                message=test_message
            )
            
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {result.id}")
            print(f"üìä –î–∞—Ç–∞: {result.date}")
            
            return True
            
        except Exception as send_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {send_error}")
            print(f"üìã –¢–∏–ø –æ—à–∏–±–∫–∏: {type(send_error).__name__}")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –≤ –≥—Ä—É–ø–ø–µ
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
                messages_count = 0
                async for message in agent.client.iter_messages(discussion_entity, limit=3):
                    messages_count += 1
                    print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ {messages_count}: {message.text[:50] if message.text else 'No text'}")
                
                print(f"üìä –î–æ—Å—Ç—É–ø –∫ —á—Ç–µ–Ω–∏—é: ‚úÖ ({messages_count} —Å–æ–æ–±—â–µ–Ω–∏–π)")
                print(f"üìä –î–æ—Å—Ç—É–ø –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ: ‚ùå (–æ—à–∏–±–∫–∞ –≤—ã—à–µ)")
                
            except Exception as read_error:
                print(f"‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á—Ç–µ–Ω–∏—é: {read_error}")
            
            return False
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

async def check_comment_format():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–µ"""
    print("\nüîç –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–µ...")
    
    try:
        agent = await get_telegram_agent()
        discussion_group_id = 2532661483
        discussion_entity = await agent.client.get_entity(discussion_group_id)
        
        print("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π:")
        message_count = 0
        
        async for message in agent.client.iter_messages(discussion_entity, limit=5):
            message_count += 1
            is_reply = hasattr(message, 'reply_to_msg_id') and message.reply_to_msg_id is not None
            
            print(f"\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ {message_count}:")
            print(f"   üìù –¢–µ–∫—Å—Ç: '{message.text[:100] if message.text else 'None'}'")
            print(f"   üë§ –û—Ç: {message.sender_id}")
            print(f"   üîó Reply to: {getattr(message, 'reply_to_msg_id', None)}")
            print(f"   üí¨ –≠—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {is_reply}")
            print(f"   üìÖ –î–∞—Ç–∞: {message.date}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            if message.text:
                keywords = ["—Ç–µ—Å—Ç", "–∑–∞–¥–∞—á–∞", "–≤–æ–ø—Ä–æ—Å", "–ø–æ–º–æ—â—å", "claude"]
                found_keywords = [kw for kw in keywords if kw.lower() in message.text.lower()]
                if found_keywords:
                    print(f"   üîë –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {found_keywords}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üß™ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–ô")
    print("=" * 50)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['TELEGRAM_API_ID'] = '29071357'
    os.environ['TELEGRAM_API_HASH'] = 'e5bb33acb28c91b50e63d86a3c3b8c1f'
    os.environ['TELEGRAM_SESSION_STRING'] = '1BVtsOKIBu0YAdpG6lpPEYFaYt4K5ZUBn1N05dOcJIwZLApCJZ8PLyE1tXFcg90LQO51vyuQ94KgTfxKzCZj6PawgQT4_LLGOhiJhiGaWyN9jZ_x1WP2M7YNyoGcJLY3B9dP_kWm9_T1K_xT0A9FQ2SnLzVZZq9MhQQ5EJo_yJ9H9J_N8KfOzzCdyYW0mOjEo5VjLVR85T3N5J9OzJ1D9b_Oj5hJIaYE9_7KY9oyDYX0vJ05Z0K2n_Yh4yTfkNZKyDHyyYJ0dN5jOQ8f9FGyJ-Z1T9oJKIzXo0VJqYJyJTzLn3Q8iHKLY0j9YRGDDzYj1yJ-Q9YmKHh8Y3Yo_o-V8n2T-JKYn3Q2_nJiY9nQo1lnYxXl2QZEk9HJKyKGJJx_8F2LoDxOcT9xYmJ1hJOzOGhK9iVJ8Y9hYGJQJKOH9K9j8Y2XYznIJhJJ5xhJqJJJl2TYqHI3YqAJ9mOJJ0z9o9FKyEY3hXJ0mIn9Q4Y9D8QmKjY0o1z5OcGYTJqJoJlJK2K-JJ30o-1Y1JOhYo_JJ='
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    print("\n=== –¢–ï–°–¢ 1: –ü–†–Ø–ú–ê–Ø –û–¢–ü–†–ê–í–ö–ê ===")
    success = await send_direct_test()
    
    # –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n=== –¢–ï–°–¢ 2: –ê–ù–ê–õ–ò–ó –°–û–û–ë–©–ï–ù–ò–ô ===")
    await check_comment_format()
    
    print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    if success:
        print("‚úÖ –ë–æ—Ç –ú–û–ñ–ï–¢ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É")
        print("üí° –ï—Å–ª–∏ –≤—ã –Ω–µ –≤–∏–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–æ–≤, –≤–æ–∑–º–æ–∂–Ω–æ:")
        print("   1. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")
        print("   2. –°–æ–±—ã—Ç–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è")
        print("   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å timing - –æ—Ç–≤–µ—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π")
    else:
        print("‚ùå –ë–æ—Ç –ù–ï –ú–û–ñ–ï–¢ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É")
        print("üí° –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")

if __name__ == "__main__":
    asyncio.run(main())