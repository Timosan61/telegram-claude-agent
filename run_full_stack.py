#!/usr/bin/env python3
"""
üöÄ Telegram Claude Agent - –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã

–ó–∞–ø—É—Å–∫–∞–µ—Ç backend FastAPI —Å–µ—Ä–≤–µ—Ä –∏ frontend Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
"""

import subprocess
import time
import os
import signal
import sys
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import streamlit
        import fastapi
        import telethon
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install -r requirements-full.txt")
        return False

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    env_file = Path(".env")
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print("cp .env.example .env")
        return False
    
    print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    return True

def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from database.models.base import create_tables
        create_tables()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def start_backend():
    """–ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ Telegram –¥–∞–Ω–Ω—ã–µ
    telegram_api_id = os.getenv("TELEGRAM_API_ID")
    if not telegram_api_id or telegram_api_id == "12345678":
        print("‚ö†Ô∏è Telegram API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ")
        backend_process = subprocess.Popen([
            sys.executable, "backend/main_minimal.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    else:
        print("üì± –ó–∞–ø—É—Å–∫–∞–µ–º —Å –ø–æ–ª–Ω–æ–π Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π")
        backend_process = subprocess.Popen([
            sys.executable, "backend/main.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend
    time.sleep(3)
    
    return backend_process

def start_frontend():
    """–ó–∞–ø—É—Å–∫ frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üé® –ó–∞–ø—É—Å–∫ frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    frontend_process = subprocess.Popen([
        "streamlit", "run", "streamlit_app.py", 
        "--server.port", "8501",
        "--server.address", "127.0.0.1"
    ], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    
    return frontend_process

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ Telegram Claude Agent - –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    if not check_dependencies():
        return 1
        
    if not check_env_file():
        return 1
        
    if not check_database():
        return 1
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    backend_process = None
    frontend_process = None
    
    try:
        backend_process = start_backend()
        frontend_process = start_frontend()
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
        time.sleep(5)
        
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
        print("=" * 60)
        print("üìä Backend API:     http://127.0.0.1:8000")
        print("üìö API Docs:        http://127.0.0.1:8000/docs")
        print("üé® Frontend:        http://127.0.0.1:8501")
        print("=" * 60)
        print("üî• –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1
        
    finally:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
        
        if backend_process:
            backend_process.terminate()
            backend_process.wait()
            print("‚úÖ Backend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        if frontend_process:
            frontend_process.terminate()
            frontend_process.wait()
            print("‚úÖ Frontend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("üëã –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    return 0

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)