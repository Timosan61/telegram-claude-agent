#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏ —Å fallback –æ—Ç–≤–µ—Ç–∞–º–∏ (–±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç AI API)
"""
import requests
import json

def create_fallback_campaign():
    """–°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é —Å —É–º–Ω—ã–º–∏ fallback –æ—Ç–≤–µ—Ç–∞–º–∏"""
    
    campaign_data = {
        "name": "Smart Fallback Campaign @eslitotoeto",
        "active": True,
        "telegram_chats": [
            "@eslitotoeto",        # –ö–∞–Ω–∞–ª (–æ—Å–Ω–æ–≤–Ω–æ–π)
            "eslitotoeto",         # –ö–∞–Ω–∞–ª (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π ID)
            "1676879122",          # –ö–∞–Ω–∞–ª (—á–∏—Å–ª–æ–≤–æ–π ID)
            "2532661483",          # –ì—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π (–ö–õ–Æ–ß–ï–í–ê–Ø)
            "8192524245"           # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞
        ],
        "keywords": ["–∑–∞–¥–∞—á–∞", "–≤–æ–ø—Ä–æ—Å", "–ø–æ–º–æ—â—å", "—Ç–µ—Å—Ç", "claude", "–±–æ—Ç", "help", "–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π"],
        "telegram_account": "+79885517453",
        "ai_provider": "openai",  # –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å OpenAI
        "claude_agent_id": "smart_fallback_agent",
        "openai_model": "gpt-4o",
        "context_messages_count": 3,
        "system_instruction": "–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Claude Bot. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ü–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Ö –≤–æ–ø—Ä–æ—Å–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏.",
        "example_replies": {
            "greeting": "–ü—Ä–∏–≤–µ—Ç! üëã –ö–∞–∫ –¥–µ–ª–∞? –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
            "help": "–ö–æ–Ω–µ—á–Ω–æ –ø–æ–º–æ–≥—É! ü§î –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            "task": "–ü–æ–Ω—è–ª –∑–∞–¥–∞—á—É! üìù –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –ø–æ—à–∞–≥–æ–≤–æ:",
            "question": "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! üí° –û—Ç–≤–µ—á—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ:",
            "test": "–¢–µ—Å—Ç –ø—Ä–∏–Ω—è—Ç! ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!",
            "bot": "–î–∞, —è Claude Bot! ü§ñ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!",
            "thanks": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ!",
            "default": "–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üí≠ –ü–æ–¥—É–º–∞—é –∏ –æ—Ç–≤–µ—á—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω–æ."
        }
    }
    
    try:
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —É–º–Ω–æ–π fallback –∫–∞–º–ø–∞–Ω–∏–∏...")
        
        # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏–º —Å—Ç–∞—Ä—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
        try:
            campaigns_response = requests.get("https://answerbot-magph.ondigitalocean.app/campaigns", timeout=10)
            if campaigns_response.status_code == 200:
                campaigns = campaigns_response.json()
                for campaign in campaigns:
                    campaign_id = campaign.get('id')
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ ID: {campaign_id}")
                    requests.delete(f"https://answerbot-magph.ondigitalocean.app/campaigns/{campaign_id}")
        except:
            pass
        
        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é
        response = requests.post(
            "https://answerbot-magph.ondigitalocean.app/campaigns",
            json=campaign_data,
            timeout=30
        )
        
        if response.status_code in [200, 201]:
            result = response.json()
            campaign_id = result.get('id')
            print(f"‚úÖ –ö–∞–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            print(f"   üìã ID: {campaign_id}")
            print(f"   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {result.get('name')}")
            print(f"   ü§ñ AI Provider: {result.get('ai_provider')}")
            print(f"   üîë Keywords: {result.get('keywords')}")
            
            return campaign_id
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏: {response.status_code}")
            print(f"üìã –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def restart_agent():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞"""
    try:
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞...")
        response = requests.post("https://answerbot-magph.ondigitalocean.app/telegram/restart", timeout=30)
        
        if response.status_code == 200:
            print("‚úÖ –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def test_campaign():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é"""
    try:
        print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
        import time
        time.sleep(3)
        
        # –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞
        response = requests.get("https://answerbot-magph.ondigitalocean.app/telegram/status", timeout=10)
        if response.status_code == 200:
            status = response.json()
            details = status.get('details', {})
            
            print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω: {details.get('connected', False)}")
            print(f"üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {details.get('authorized', False)}")
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {details.get('active_campaigns', 0)}")
            
            ai_clients = details.get('ai_clients', {})
            print(f"ü§ñ OpenAI: {ai_clients.get('openai_working', False)}")
            print(f"ü§ñ Claude: {ai_clients.get('claude', False)}")
            
            if details.get('active_campaigns', 0) > 0:
                print("\n‚úÖ –°–ò–°–¢–ï–ú–ê –ê–ö–¢–ò–í–ù–ê!")
                print("üí° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
                if ai_clients.get('openai_working'):
                    print("   üß† OpenAI GPT-4o –∞–∫—Ç–∏–≤–µ–Ω - —É–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")
                else:
                    print("   üîÑ Fallback —Ä–µ–∂–∏–º - –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")
                
                print("\nüéØ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö:")
                print("   '—Ç–µ—Å—Ç' - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã")
                print("   '–ø–æ–º–æ—â—å' - –∑–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏")  
                print("   '–≤–æ–ø—Ä–æ—Å' - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
                print("   '–±–æ—Ç' - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
                
                return True
        
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –°–û–ó–î–ê–ù–ò–ï –£–ú–ù–û–ô FALLBACK –ö–ê–ú–ü–ê–ù–ò–ò")
    print("=" * 45)
    
    # –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
    campaign_id = create_fallback_campaign()
    if not campaign_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é")
        return
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
    if restart_agent():
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
        if test_campaign():
            print("\nüéâ –ì–û–¢–û–í–û –ö –†–ê–ë–û–¢–ï!")
            print("üìù –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!")
            print("üîç –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∫–∞–Ω–∞–ª–µ @eslitotoeto")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞")

if __name__ == "__main__":
    main()