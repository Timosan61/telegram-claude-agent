#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram Analytics Service.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –õ–û–ö–ê–õ–¨–ù–û –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª analytics_session.session –Ω—É–∂–Ω–æ
—Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_API_ID, TELEGRAM_API_HASH, TELEGRAM_PHONE
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python authorize_telegram.py
3. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ SMS
4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ analytics_session.session –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω
"""

import os
import sys
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
root_dir = Path(__file__).parent
sys.path.insert(0, str(root_dir))

from backend.services.analytics_service import analytics_service


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    print("üîê Telegram Analytics Service - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    api_id = os.getenv("TELEGRAM_API_ID")
    api_hash = os.getenv("TELEGRAM_API_HASH") 
    phone = os.getenv("TELEGRAM_PHONE")
    
    print(f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"   TELEGRAM_API_ID: {'‚úÖ' if api_id else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    print(f"   TELEGRAM_API_HASH: {'‚úÖ' if api_hash else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    print(f"   TELEGRAM_PHONE: {'‚úÖ' if phone else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    print()
    
    if not all([api_id, api_hash, phone]):
        print("‚ùå –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞:")
        print("   export TELEGRAM_API_ID=your_api_id")
        print("   export TELEGRAM_API_HASH=your_api_hash")  
        print("   export TELEGRAM_PHONE=your_phone")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
    session_path = Path("analytics_session.session")
    if session_path.exists():
        print(f"üìÅ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_path}")
        choice = input("–ü–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è? [y/N]: ").lower().strip()
        if choice != 'y':
            print("üëã –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return True
    
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
    print("üì± –ù–∞ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–¥–µ—Ç SMS —Å –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
    print()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    try:
        success = await analytics_service.authorize()
        
        if success:
            print()
            print("üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"‚úÖ –§–∞–π–ª —Å–µ—Å—Å–∏–∏ —Å–æ–∑–¥–∞–Ω: {session_path.absolute()}")
            print()
            print("üì§ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª analytics_session.session –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä")
            print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω")
            print()
            print("üîß –î–ª—è DigitalOcean App Platform:")
            print("   - –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Git –∏–ª–∏ Volume Mount")
            print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
            
            return True
        else:
            print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
            return False
            
    except KeyboardInterrupt:
        print("\nüëã –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    finally:
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
        try:
            await analytics_service.disconnect()
        except:
            pass


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    success = asyncio.run(main())
    
    if success:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
        sys.exit(0)
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        sys.exit(1)