name: Test Backend API

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'database/**'
      - 'requirements.txt'
      - 'requirements_backend.txt'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'database/**'
      - 'requirements.txt'
      - 'requirements_backend.txt'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_backend.txt
        pip install pytest pytest-asyncio httpx
        
    - name: Set environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
        echo "TELEGRAM_API_ID=12345" >> $GITHUB_ENV
        echo "TELEGRAM_API_HASH=test_hash" >> $GITHUB_ENV
        echo "TELEGRAM_PHONE=+1234567890" >> $GITHUB_ENV
        
    - name: Test database models import
      run: |
        python -c "
        import sys
        sys.path.append('.')
        from database.models.base import get_db, create_tables
        from database.models.campaign import Campaign
        from database.models.log import ActivityLog  
        from database.models.company import CompanySettings
        print('✅ All models imported successfully')
        "
        
    - name: Test backend API import
      run: |
        python -c "
        import sys
        sys.path.append('.')
        import backend.main
        from backend.api import campaigns, logs, chats, company
        print('✅ Backend API imports successful')
        "
        
    - name: Run basic API tests
      run: |
        python -c "
        import sys
        sys.path.append('.')
        from fastapi.testclient import TestClient
        from backend.main import app
        client = TestClient(app)
        
        # Test health endpoint
        response = client.get('/health')
        assert response.status_code == 200
        print('✅ Health endpoint test passed')
        
        # Test campaigns list
        response = client.get('/campaigns/')
        assert response.status_code == 200
        print('✅ Campaigns endpoint test passed')
        
        print('✅ All basic API tests passed')
        "