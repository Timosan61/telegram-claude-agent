#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ production –∫–∞–º–ø–∞–Ω–∏–∏ —Å –∞–∫—Ç–∏–≤–Ω—ã–º OpenAI
"""
import requests
import json

def create_openai_campaign():
    """–°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é —Å –∞–∫—Ç–∏–≤–Ω—ã–º OpenAI –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
    
    campaign_data = {
        "name": "Production Campaign @eslitotoeto with OpenAI",
        "active": True,
        "telegram_chats": [
            "@eslitotoeto",        # –ö–∞–Ω–∞–ª (–æ—Å–Ω–æ–≤–Ω–æ–π)
            "eslitotoeto",         # –ö–∞–Ω–∞–ª (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π ID)
            "1676879122",          # –ö–∞–Ω–∞–ª (—á–∏—Å–ª–æ–≤–æ–π ID)
            "2532661483",          # –ì—Ä—É–ø–ø–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π (–ö–õ–Æ–ß–ï–í–ê–Ø)
            "8192524245"           # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞
        ],
        "keywords": ["–∑–∞–¥–∞—á–∞", "–≤–æ–ø—Ä–æ—Å", "–ø–æ–º–æ—â—å", "—Ç–µ—Å—Ç", "claude", "–±–æ—Ç", "help"],
        "telegram_account": "+79885517453",
        "ai_provider": "openai",  # –ê–ö–¢–ò–í–ù–´–ô OpenAI
        "claude_agent_id": "production_telegram_agent",
        "openai_model": "gpt-4o",
        "context_messages_count": 5,
        "system_instruction": "–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º Claude Bot. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ü–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Ö –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ–º, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã.",
        "example_replies": {
            "greeting": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? üëã –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
            "help": "–ö–æ–Ω–µ—á–Ω–æ, –ø–æ–º–æ–≥—É! –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§î",
            "task": "–ü–æ–Ω—è–ª –∑–∞–¥–∞—á—É! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –ø–æ —à–∞–≥–∞–º üìù",
            "question": "–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –û—Ç–≤–µ—á—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ üí°",
            "thanks": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å! üòä –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ!"
        }
    }
    
    try:
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ production –∫–∞–º–ø–∞–Ω–∏–∏ —Å OpenAI...")
        
        response = requests.post(
            "https://answerbot-magph.ondigitalocean.app/campaigns",
            json=campaign_data,
            timeout=30
        )
        
        if response.status_code in [200, 201]:
            result = response.json()
            campaign_id = result.get('id')
            print(f"‚úÖ –ö–∞–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            print(f"   üìã ID: {campaign_id}")
            print(f"   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {result.get('name')}")
            print(f"   ü§ñ AI Provider: {result.get('ai_provider')}")
            print(f"   üîë Keywords: {result.get('keywords')}")
            
            return campaign_id
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏: {response.status_code}")
            print(f"üìã –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def restart_agent():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏"""
    try:
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞...")
        response = requests.post(
            "https://answerbot-magph.ondigitalocean.app/telegram/restart", 
            timeout=30
        )
        
        if response.status_code == 200:
            print("‚úÖ –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def check_final_status():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞"""
    try:
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞...")
        
        # –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞
        response = requests.get("https://answerbot-magph.ondigitalocean.app/telegram/status", timeout=10)
        if response.status_code == 200:
            status = response.json()
            details = status.get('details', {})
            
            print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω: {details.get('connected', False)}")
            print(f"üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {details.get('authorized', False)}")
            print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {details.get('active_campaigns', 0)}")
            print(f"ü§ñ OpenAI: {details.get('ai_clients', {}).get('openai_working', False)}")
        
        # –°–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π
        campaigns_response = requests.get("https://answerbot-magph.ondigitalocean.app/campaigns", timeout=10)
        if campaigns_response.status_code == 200:
            campaigns = campaigns_response.json()
            print(f"\nüìã –í—Å–µ–≥–æ –∫–∞–º–ø–∞–Ω–∏–π: {len(campaigns)}")
            
            for campaign in campaigns:
                if campaign.get('active'):
                    print(f"   ‚úÖ –ê–ö–¢–ò–í–ù–ê: {campaign.get('name')} (ID: {campaign.get('id')})")
                    print(f"      ü§ñ AI: {campaign.get('ai_provider')}")
                    print(f"      üí¨ –ß–∞—Ç—ã: {len(campaign.get('telegram_chats', []))}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –°–û–ó–î–ê–ù–ò–ï PRODUCTION –ö–ê–ú–ü–ê–ù–ò–ò –° OPENAI")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
    campaign_id = create_openai_campaign()
    if not campaign_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é")
        return
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
    if restart_agent():
        print("‚è±Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...")
        import time
        time.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        check_final_status()
        
        print("\nüéâ –ì–û–¢–û–í–û!")
        print("üí° –¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —á–µ—Ä–µ–∑ OpenAI GPT-4o")
        print("üìù –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –ª—é–±—ã–º –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:")
        print("   '–∑–∞–¥–∞—á–∞', '–≤–æ–ø—Ä–æ—Å', '–ø–æ–º–æ—â—å', '—Ç–µ—Å—Ç', 'claude', '–±–æ—Ç', 'help'")
        print("üîç –û—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞")

if __name__ == "__main__":
    main()