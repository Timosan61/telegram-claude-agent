#!/usr/bin/env python3
"""
üîç –ê–Ω–∞–ª–∏–∑ DigitalOcean Apps –¥–ª—è –ø–æ–∏—Å–∫–∞ Telegram Agent
"""
import os
import json
import requests
from dotenv import load_dotenv

load_dotenv()

def get_apps():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    token = os.getenv('DIGITALOCEAN_TOKEN')
    if not token:
        print("‚ùå DIGITALOCEAN_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return None
    
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.get('https://api.digitalocean.com/v2/apps', headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ DigitalOcean API: {e}")
        return None

def analyze_app_for_telegram(app):
    """–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ Telegram Agent"""
    score = 0
    reasons = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    name = app.get('spec', {}).get('name', '').lower()
    if any(keyword in name for keyword in ['telegram', 'agent', 'bot', 'answer']):
        score += 5
        reasons.append(f"üìõ –ò–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {name}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è GitHub
    services = app.get('spec', {}).get('services', [])
    for service in services:
        github = service.get('github', {})
        repo = github.get('repo', '').lower()
        if 'telegram' in repo or 'agent' in repo or 'claude' in repo:
            score += 5
            reasons.append(f"üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    envs = app.get('spec', {}).get('envs', [])
    telegram_env_found = False
    for env in envs:
        key = env.get('key', '').upper()
        if any(keyword in key for keyword in ['TELEGRAM', 'ANTHROPIC', 'CLAUDE']):
            if not telegram_env_found:
                score += 3
                reasons.append(f"üîë Telegram/AI –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã")
                telegram_env_found = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ URL (live_url)
    live_url = app.get('live_url', '')
    if live_url:
        if 'answerbot' in live_url or 'telegram' in live_url or 'agent' in live_url:
            score += 2
            reasons.append(f"üåê URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∞–≥–µ–Ω—Ç–∞: {live_url}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if app.get('last_deployment_active_at'):
        score += 1
        reasons.append("‚úÖ –ê–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ")
    
    return score, reasons

def main():
    print("üîç –ê–ù–ê–õ–ò–ó DIGITALOCEAN APP PLATFORM –ü–†–ò–õ–û–ñ–ï–ù–ò–ô")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    data = get_apps()
    if not data:
        return
    
    apps = data.get('apps', [])
    if not apps:
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: {len(apps)}")
    print()
    
    # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    candidates = []
    
    for app in apps:
        score, reasons = analyze_app_for_telegram(app)
        candidates.append((score, app, reasons))
    
    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    candidates.sort(key=lambda x: x[0], reverse=True)
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    for i, (score, app, reasons) in enumerate(candidates, 1):
        print(f"üèÜ –ü–†–ò–õ–û–ñ–ï–ù–ò–ï #{i} (–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {score}/16)")
        print("‚îÄ" * 50)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        spec = app.get('spec', {})
        print(f"üìõ –ò–º—è: {spec.get('name', 'Unknown')}")
        print(f"üÜî ID: {app.get('id', 'Unknown')}")
        print(f"üåê URL: {app.get('live_url', 'Not available')}")
        print(f"üìç –†–µ–≥–∏–æ–Ω: {app.get('region', {}).get('label', 'Unknown')}")
        print(f"üìÖ –°–æ–∑–¥–∞–Ω–æ: {app.get('created_at', 'Unknown')[:19]}")
        print(f"üöÄ –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–ø–ª–æ–π: {app.get('last_deployment_active_at', 'Unknown')[:19]}")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–∞—Ö
        services = spec.get('services', [])
        if services:
            print(f"üîß –°–µ—Ä–≤–∏—Å—ã:")
            for service in services:
                service_name = service.get('name', 'Unknown')
                github = service.get('github', {})
                repo = github.get('repo', 'No repo')
                branch = github.get('branch', 'main')
                print(f"   üì¶ {service_name}: {repo} ({branch})")
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ Telegram-—Å–≤—è–∑–∞–Ω–Ω—ã–µ)
        print(f"üîë Telegram/AI –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
        envs = spec.get('envs', [])
        telegram_vars = []
        for env in envs:
            key = env.get('key', '')
            if any(keyword in key.upper() for keyword in ['TELEGRAM', 'ANTHROPIC', 'CLAUDE', 'OPENAI', 'API_ID', 'API_HASH', 'PHONE']):
                value = env.get('value', '')
                if len(value) > 20:
                    value = value[:10] + "..." + value[-5:]
                telegram_vars.append(f"   {key}: {value}")
        
        if telegram_vars:
            for var in telegram_vars[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(var)
            if len(telegram_vars) > 5:
                print(f"   ... –∏ –µ—â–µ {len(telegram_vars) - 5} –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
        else:
            print("   Telegram –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ spec.envs")
        
        # –ü—Ä–∏—á–∏–Ω—ã —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
        if reasons:
            print(f"üéØ –ü—Ä–∏—á–∏–Ω—ã —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏:")
            for reason in reasons:
                print(f"   {reason}")
        
        print()
        
        # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        if i == 1 and score > 5:
            print("üéØ TELEGRAM AGENT –ù–ê–ô–î–ï–ù!")
            print("‚îÄ" * 50)
            print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {spec.get('name')}")
            print(f"üåê URL: {app.get('live_url')}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
            live_url = app.get('live_url', '')
            if live_url:
                print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...")
                try:
                    import requests
                    response = requests.get(f"{live_url}/health", timeout=10)
                    if response.status_code == 200:
                        health_data = response.json()
                        print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω: {health_data}")
                    else:
                        print(f"‚ö†Ô∏è  API –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
                except:
                    print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            
            print()
            
            # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è App Platform
            print("üìã –û–°–û–ë–ï–ù–ù–û–°–¢–ò APP PLATFORM:")
            print("   üö´ –ù–ï–¢ SSH –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º")
            print("   üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Dashboard/API")
            print("   üìù –õ–æ–≥–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
            print("   üîÑ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Settings")
            print("")
            
            print("üí° –í–ê–†–ò–ê–ù–¢–´ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:")
            print("   1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –≥–æ—Ç–æ–≤–æ–π —Å–µ—Å—Å–∏–µ–π")
            print("   2. GitHub Actions –¥–ª—è –∞–≤—Ç–æ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            print("   3. –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            print("   4. Deploy hooks —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
            print()
        
        if i < len(candidates):
            print("‚îÄ" * 60)
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if candidates:
        best_app = candidates[0][1]
        best_score = candidates[0][0]
        
        print("üéØ –ò–¢–û–ì–û–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("=" * 60)
        
        if best_score > 5:
            print(f"‚úÖ Telegram Agent –Ω–∞–π–¥–µ–Ω: {best_app.get('spec', {}).get('name')}")
            print(f"üåê URL: {best_app.get('live_url')}")
            print()
            print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
            print("   1. App Platform –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç SSH –¥–æ—Å—Ç—É–ø")
            print("   2. –ù—É–∂–µ–Ω –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            print("   3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:")
            print("      - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å —Ç–æ–∫–µ–Ω–∞–º–∏")
            print("      - GitHub Actions –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            print("      - –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è –∞–≤—Ç–æ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        else:
            print("‚ö†Ô∏è  Telegram Agent –Ω–µ –Ω–∞–π–¥–µ–Ω —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä—É—á–Ω—É—é –≤ DigitalOcean Dashboard")

if __name__ == "__main__":
    main()