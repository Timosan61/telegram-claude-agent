#!/usr/bin/env python3
"""
–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ TELEGRAM_SESSION_STRING –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏
"""
import os
import base64
import asyncio
from telethon import TelegramClient
from telethon.sessions import StringSession
from dotenv import load_dotenv

load_dotenv()

async def extract_session_string():
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞"""
    try:
        api_id = int(os.getenv("TELEGRAM_API_ID"))
        api_hash = os.getenv("TELEGRAM_API_HASH")
        
        print("üîó –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
        client = TelegramClient('telegram_agent', api_id, api_hash)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        await client.connect()
        
        if await client.is_user_authorized():
            print("‚úÖ –°–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞!")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            me = await client.get_me()
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} {me.last_name or ''}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone}")
            print(f"üÜî ID: {me.id}")
            if me.username:
                print(f"üìß Username: @{me.username}")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π StringSession —Å —Ç–µ–º–∏ –∂–µ –¥–∞–Ω–Ω—ã–º–∏
            string_session = StringSession()
            string_client = TelegramClient(string_session, api_id, api_hash)
            
            # –ö–æ–ø–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            await string_client.connect()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
            # –ù–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å raw –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
            session_data = client.session.save()
            
            # –°–æ–∑–¥–∞–µ–º StringSession –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –Ω–µ–≥–æ –¥–∞–Ω–Ω—ã–µ
            string_session_obj = StringSession()
            string_session_obj.load(session_data)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É
            session_string = string_session_obj.save()
            
            print("\nüîë –î–ê–ù–ù–´–ï –î–õ–Ø APP PLATFORM:")
            print("=" * 50)
            print(f"TELEGRAM_SESSION_STRING={session_string}")
            
            # –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º base64 –≤–µ—Ä—Å–∏—é
            session_b64 = base64.b64encode(session_string.encode()).decode()
            print(f"TELEGRAM_SESSION_B64={session_b64}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
            with open("session_for_app_platform.txt", "w") as f:
                f.write(f"TELEGRAM_SESSION_STRING={session_string}\n")
                f.write(f"TELEGRAM_SESSION_B64={session_b64}\n")
            
            print("\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: session_for_app_platform.txt")
            
            await string_client.disconnect()
            
        else:
            print("‚ùå –°–µ—Å—Å–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞")
            return None
            
        await client.disconnect()
        return session_string
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return None

async def main():
    session_string = await extract_session_string()
    if session_string:
        print("\nüéâ –°–ï–°–°–ò–Ø –£–°–ü–ï–®–ù–û –ò–ó–í–õ–ï–ß–ï–ù–ê!")
        print("üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ session_for_app_platform.txt")
    else:
        print("\n‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –ò–ó–í–õ–ï–ß–¨ –°–ï–°–°–ò–Æ")

if __name__ == "__main__":
    asyncio.run(main())