#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º–∏—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –±–æ—Ç–∞
"""
import requests
import json
import asyncio

async def fix_campaign_issue():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –∫–∞–º–ø–∞–Ω–∏–µ–π"""
    
    print("üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º–∏—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏...")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∫–∞–º–ø–∞–Ω–∏–π...")
    try:
        response = requests.get("https://answerbot-magph.ondigitalocean.app/campaigns/", timeout=10)
        if response.status_code == 200:
            campaigns = response.json()
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∫–∞–º–ø–∞–Ω–∏–π: {len(campaigns)}")
            
            for campaign in campaigns:
                print(f"   ID: {campaign['id']}, Name: {campaign['name']}")
                print(f"   Keywords: {campaign['keywords']}")
                print(f"   Instruction: {campaign['system_instruction'][:50]}...")
                print(f"   AI Provider: {campaign['ai_provider']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–π: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–ø–∞–Ω–∏—é –¢–ò–ú
    print("\n2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏ –¢–ò–ú...")
    if campaigns:
        team_campaign = campaigns[0]  # –ö–∞–º–ø–∞–Ω–∏—è –¢–ò–ú
        campaign_id = team_campaign['id']
        
        # –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        updated_campaign = {
            "name": "Team Support Bot",
            "active": True,
            "telegram_chats": ["@eslitotoeto"],
            "keywords": ["—Ç–µ—Å—Ç", "–∏–∏", "—á–∞—Ç –±–æ—Ç", "–ø–æ–º–æ—â—å", "–≤–æ–ø—Ä–æ—Å"],
            "telegram_account": "@myassyst",
            "ai_provider": "openai",
            "openai_model": "gpt-4",
            "context_messages_count": 3,
            "system_instruction": "–¢—ã - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–∞–Ω–¥—ã —Å –∏–º–µ–Ω–µ–º –°–º–µ—Ç–∞–Ω–∫–∞. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–∞ —Å–ª–æ–≤–æ '—Ç–µ—Å—Ç' –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: '–ö–†–£–¢–û'. –ù–∞ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–º–æ–≥–∞–π –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏.",
            "example_replies": {
                "—Ç–µ—Å—Ç": "–ö–†–£–¢–û",
                "–ø–æ–º–æ—â—å": "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? ü§î",
                "—Å–ø–∞—Å–∏–±–æ": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä"
            }
        }
        
        try:
            response = requests.put(
                f"https://answerbot-magph.ondigitalocean.app/campaigns/{campaign_id}",
                json=updated_campaign,
                timeout=30
            )
            
            if response.status_code == 200:
                print("‚úÖ –ö–∞–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
                print(response.text)
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
            return False
    
    # 3. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞
    print("\n3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞...")
    try:
        response = requests.post(
            "https://answerbot-magph.ondigitalocean.app/telegram/restart",
            timeout=30
        )
        
        if response.status_code == 200:
            print("‚úÖ –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
            
            # –ñ–¥–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ (10 —Å–µ–∫—É–Ω–¥)...")
            await asyncio.sleep(10)
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")
        return False
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    try:
        response = requests.get("https://answerbot-magph.ondigitalocean.app/health", timeout=10)
        if response.status_code == 200:
            health = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {health['status']}")
            print(f"üì° Telegram: {health['telegram_connected']}")
            print(f"üß† AI –∫–ª–∏–µ–Ω—Ç—ã: {health['ai_providers']}")
            print(f"üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {health['telegram_status']['active_campaigns']}")
            
            if health['telegram_status']['active_campaigns'] == 1:
                print("‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–ø–∞–Ω–∏–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            else:
                print(f"‚ö†Ô∏è –í—Å–µ –µ—â–µ {health['telegram_status']['active_campaigns']} –∫–∞–º–ø–∞–Ω–∏–π")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    print("\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –ù–∞–ø–∏—à–∏—Ç–µ '—Ç–µ—Å—Ç' –≤ –∫–∞–Ω–∞–ª @eslitotoeto")
    print("2. –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º: '–ö–†–£–¢–û'")
    print("3. –ï—Å–ª–∏ –±–æ—Ç –≤—Å–µ –µ—â–µ –¥—É–±–ª–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã, –Ω—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π —Ä–µ—Å—Ç–∞—Ä—Ç backend")
    
    return True

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º–∏—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –±–æ—Ç–∞")
    print("=" * 60)
    
    success = await fix_campaign_issue()
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüìù –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
        print("- –û—á–∏—â–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞–º–ø–∞–Ω–∏–∏")
        print("- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        print("- –î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤")
        print("- –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∞–≥–µ–Ω—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞")
        print("\nüß™ –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π '—Ç–µ—Å—Ç'")
    else:
        print("‚ùå –í–æ–∑–Ω–∏–∫–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏")
        print("üîß –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ")

if __name__ == "__main__":
    asyncio.run(main())