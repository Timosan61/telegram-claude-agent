#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ —Å–µ—Å—Å–∏–∏
"""
import asyncio
import os
import sys
from datetime import datetime
from dotenv import load_dotenv

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
load_dotenv()

from telethon import TelegramClient, events
from telethon.tl.types import PeerChannel, PeerChat, PeerUser

async def test_telegram_connection():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
    print("=" * 50)
    
    api_id = int(os.getenv("TELEGRAM_API_ID"))
    api_hash = os.getenv("TELEGRAM_API_HASH") 
    phone = os.getenv("TELEGRAM_PHONE")
    
    print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
    print(f"üîë API ID: {api_id}")
    print()
    
    # –°–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    session_names = [
        "telegram_agent",
        "auth_test", 
        "interactive_test",
        "check_auth"
    ]
    
    for session_name in session_names:
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é: {session_name}")
        
        try:
            client = TelegramClient(session_name, api_id, api_hash)
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
            await client.connect()
            
            if await client.is_user_authorized():
                print(f"‚úÖ –°–µ—Å—Å–∏—è {session_name} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞!")
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                me = await client.get_me()
                print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} {me.last_name or ''}")
                print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone}")
                print(f"üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {me.id}")
                
                # –ü–æ–ª—É—á–∞–µ–º –¥–∏–∞–ª–æ–≥–∏
                print(f"\\nüìã –í–∞—à–∏ —á–∞—Ç—ã –∏ –∫–∞–Ω–∞–ª—ã:")
                dialogs_count = 0
                async for dialog in client.iter_dialogs(limit=15):
                    dialogs_count += 1
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
                    if dialog.is_channel:
                        if dialog.entity.megagroup:
                            chat_type = "üë• –°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞"
                        else:
                            chat_type = "üì∫ –ö–∞–Ω–∞–ª"
                    elif dialog.is_group:
                        chat_type = "üë• –ì—Ä—É–ø–ø–∞"
                    else:
                        chat_type = "üë§ –õ–∏—á–Ω—ã–π —á–∞—Ç"
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
                    print(f"  {dialogs_count:2d}. {chat_type}: {dialog.name}")
                    print(f"      ID: {dialog.id}, –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–æ: {dialog.unread_count}")
                
                print(f"\\nüìä –ù–∞–π–¥–µ–Ω–æ {dialogs_count} –¥–∏–∞–ª–æ–≥–æ–≤")
                
                # –¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (5 —Å–µ–∫—É–Ω–¥)
                print(f"\\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π (10 —Å–µ–∫—É–Ω–¥)...")
                print("üí° –ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ –ª—é–±–æ–º —á–∞—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
                
                messages_received = 0
                
                @client.on(events.NewMessage())
                async def message_handler(event):
                    nonlocal messages_received
                    messages_received += 1
                    
                    message = event.message
                    now = datetime.now().strftime("%H:%M:%S")
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
                    chat_info = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                    if isinstance(message.peer_id, PeerChannel):
                        chat_info = f"üì∫ –ö–∞–Ω–∞–ª/–ì—Ä—É–ø–ø–∞"
                    elif isinstance(message.peer_id, PeerChat):
                        chat_info = f"üë• –ì—Ä—É–ø–ø–∞"
                    elif isinstance(message.peer_id, PeerUser):
                        chat_info = f"üë§ –õ–∏—á–Ω—ã–π —á–∞—Ç"
                    
                    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞
                    try:
                        chat_entity = await client.get_entity(message.peer_id)
                        chat_name = getattr(chat_entity, 'title', 
                                          getattr(chat_entity, 'username', 
                                                 getattr(chat_entity, 'first_name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')))
                        if hasattr(chat_entity, 'username') and chat_entity.username:
                            chat_name = f"@{chat_entity.username}"
                    except:
                        chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                    
                    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    text = message.text[:60] + "..." if message.text and len(message.text) > 60 else message.text or "[–ú–µ–¥–∏–∞]"
                    
                    print(f"üì® [{now}] #{messages_received}")
                    print(f"   {chat_info}: {chat_name}")
                    print(f"   üí¨ {text}")
                    print()
                
                # –ñ–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                await asyncio.sleep(10)
                
                print(f"\\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
                print(f"   –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_received}")
                
                if messages_received > 0:
                    print("   ‚úÖ –ê–ì–ï–ù–¢ –í–ò–î–ò–¢ –°–û–û–ë–©–ï–ù–ò–Ø!")
                    print("   üéØ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                else:
                    print("   ‚ö†Ô∏è  –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ")
                    print("   üí° –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç–∞—Ö")
                
                await client.disconnect()
                return True
                
            else:
                print(f"‚ùå –°–µ—Å—Å–∏—è {session_name} –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞")
                await client.disconnect()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Å–µ—Å—Å–∏–µ–π {session_name}: {e}")
            try:
                await client.disconnect()
            except:
                pass
    
    print("\\n‚ùå –ù–∏ –æ–¥–Ω–∞ —Å–µ—Å—Å–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("üí° –¢—Ä–µ–±—É–µ—Ç—Å—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Telegram")
    return False

if __name__ == "__main__":
    try:
        result = asyncio.run(test_telegram_connection())
        if result:
            print("\\nüéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù: Telegram –∞–≥–µ–Ω—Ç –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!")
        else:
            print("\\n‚ö†Ô∏è –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    except KeyboardInterrupt:
        print("\\nüõë –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()